>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3
>>> add_integer(1, 3.0)
4
>>> add_integer(100, -2)
98
>>> add_integer(100.3, -2)
98
>>> add_integer(100.3, -2.9)
98
>>> add_integer("a", "b")
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(1, '3')
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(1, [3])
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(None, 3)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(2, None)
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(2, float('NaN'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
>>> add_integer(2, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(2, -float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'
>>> add_integer(1)
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'b'
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'b'
>>> add_integer(1, 2, 3)
Traceback (most recent call last):
...
TypeError: add_integer() takes 2 positional arguments but 3 were given
